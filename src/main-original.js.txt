/**
 * This code handles POST requests called by the slash command; '/boushitsu'.
 * Receiving a request from Slack, respond immidiately, and publish the payload
 * to Beebotte through Beebotte REST API.
 */

const BBT_CHANNEL_TOKEN = 'token_VntapVQeKZk7dHhc'
const BBT_CHANNEL = 'boushitsu_slackbot'
const BBT_RESOURCE = 'res'

const doGet = () => {
  return ContentService.createTextOutput('You have to request with payload data and use POST method.')
}

// See. https://developers.google.com/apps-script/guides/web
const doPost = (e) => {
  const queries = parseQuery(e.postData.contents)
  // Make sure that queries has positive length
  if (!queries) return ContentService.createTextOutput('Your request was not understood.')

  /*
    Collect the attributes required to post an ephemeral messaage.
    See. https://api.slack.com/methods/chat.postEphemeral
  */
  const postBody = {
    data: {
      text: queries.text,
      channel: queries.channel_id,
      user: queries.user_id
    }
  }

  // See. https://beebotte.com/docs/restapi
  const options = {
    'contentType': 'application/json',
    'headers': {
      'X-Auth-Token': BBT_CHANNEL_TOKEN
    },
    'method': 'post',
    'payload': JSON.stringify(postBody)
  }
  const url = `https://api.beebotte.com/v1/data/publish/${BBT_CHANNEL}/${BBT_RESOURCE}`
  UrlFetchApp.fetch(url, options) // Request

  return ContentService.createTextOutput() // An empty responce to Slack slash command.
}

/*
  Parse query string such as 'hoge=fuga&foo=bar' and convert to key & value object.
  See. https://stackoverflow.com/questions/8486099/how-do-i-parse-a-url-query-parameters-in-javascript
*/
const parseQuery = q => {
  // Make sure that contents is string
  if (typeof q === 'string') {
    let result = {}
    q.split('&').forEach(part => {
      const item = part.split('=')
      result[item[0]] = decodeURIComponent(item[1])
    })
    return result
  }
  return null
}
